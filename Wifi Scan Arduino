Quellen:
https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/


Anleitung für den Arduino Wifi Scan


Arduino auf ESP32 installieren und ausführen

In Arduino Interface unter Werkzeuge > Port > "COM" Port auswählen (Board-Eigenschaften sollten dabei automatisch erkannt werden)

Falls nicht > Unter Werkzeuge > Board > entsprechendes Board hinzufügen

Unter Datei > Beispiele > WiFi > WifiScan

Neuen Sketch öffnen > folgenden Code hinzufügen > SSID und Password anpassen 


##################### Code Anfang #########################

#include <WiFi.h>
 
const char* ssid = "NAME";
const char* password =  "PASSWORD";
 
String translateEncryptionType(wifi_auth_mode_t encryptionType) {
 
  switch (encryptionType) {
    case (WIFI_AUTH_OPEN):
      return "Open";
    case (WIFI_AUTH_WEP):
      return "WEP";
    case (WIFI_AUTH_WPA_PSK):
      return "WPA_PSK";
    case (WIFI_AUTH_WPA2_PSK):
      return "WPA2_PSK";
    case (WIFI_AUTH_WPA_WPA2_PSK):
      return "WPA_WPA2_PSK";
    case (WIFI_AUTH_WPA2_ENTERPRISE):
      return "WPA2_ENTERPRISE";
  }
}
 
void scanNetworks() {
 
  int numberOfNetworks = WiFi.scanNetworks();
 
  Serial.print("Number of networks found: ");
  Serial.println(numberOfNetworks);
 
  for (int i = 0; i < numberOfNetworks; i++) {
 
    Serial.print("Network name: ");
    Serial.println(WiFi.SSID(i));
 
    Serial.print("Signal strength: ");
    Serial.println(WiFi.RSSI(i));
 
    Serial.print("MAC address: ");
    Serial.println(WiFi.BSSIDstr(i));
 
    Serial.print("Encryption type: ");
    String encryptionTypeDescription = translateEncryptionType(WiFi.encryptionType(i));
    Serial.println(encryptionTypeDescription);
    Serial.println("-----------------------");
 
  }
}
 
void connectToNetwork() {
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Establishing connection to WiFi..");
  }
 
  Serial.println("Connected to network");
 
}
 
void setup() {
 
  Serial.begin(115200);
 
  scanNetworks();
  connectToNetwork();
 
  Serial.println(WiFi.macAddress());
  Serial.println(WiFi.localIP());
 
  WiFi.disconnect(true);
  Serial.println(WiFi.localIP());

}
 
void loop() {}

###################### Code Ende ##########################




Code in der Arduino Konsole hochladen > Upload wird durchgeführt > wird nach dem Wifi gesucht

Wenn der der Upload erfolgreich war > in der Arduino Konsole > Serial Monitor öffnen > Baud Rate auf "115200" stellen

In Arduino Konsole > Seriellen Monitor öffnen (rechter Button in der Konsole) > "Scan abgeschlossen" > Wifi erkannt

(falls das Wifi nicht erkannt wird > Reset-Taste betätigen > Seriellen Monitor erneut öffnen ggf. erneuten Wifiscan durchführen)










































 

